"use strict";(self["webpackChunkvino_md"]=self["webpackChunkvino_md"]||[]).push([[261],{4261:(t,e,n)=>{n.r(e),n.d(e,{MENU_BACK_BUTTON_PRIORITY:()=>a,OVERLAY_BACK_BUTTON_PRIORITY:()=>o,blockHardwareBackButton:()=>r,startHardwareBackButton:()=>i});
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */
const r=()=>{document.addEventListener("backbutton",(()=>{}))},i=()=>{const t=document;let e=!1;t.addEventListener("backbutton",(()=>{if(e)return;let n=0,r=[];const i=new CustomEvent("ionBackButton",{bubbles:!1,detail:{register(t,e){r.push({priority:t,handler:e,id:n++})}}});t.dispatchEvent(i);const o=async t=>{try{if(null===t||void 0===t?void 0:t.handler){const e=t.handler(a);null!=e&&await e}}catch(e){console.error(e)}},a=()=>{if(r.length>0){let t={priority:Number.MIN_SAFE_INTEGER,handler:()=>{},id:-1};r.forEach((e=>{e.priority>=t.priority&&(t=e)})),e=!0,r=r.filter((e=>e.id!==t.id)),o(t).then((()=>e=!1))}};a()}))},o=100,a=99}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianMvMjYxLWxlZ2FjeS5hY2I5NTc3ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBYUEsTUFBTUEsRUFBMEIsS0FDOUJDLFNBQVNDLGlCQUFpQixjQUFjLFFBQVUsRUFFOUNDLEVBQTBCLEtBQzlCLE1BQU1DLEVBQU1ILFNBQ1osSUFBSUksR0FBTyxFQUNYRCxFQUFJRixpQkFBaUIsY0FBYyxLQUNqQyxHQUFJRyxFQUNGLE9BRUYsSUFBSUMsRUFBUSxFQUNSQyxFQUFXLEdBQ2YsTUFBTUMsRUFBSyxJQUFJQyxZQUFZLGdCQUFpQixDQUMxQ0MsU0FBUyxFQUNUQyxPQUFRLENBQ05DLFNBQVNDLEVBQVVDLEdBQ2pCUCxFQUFTUSxLQUFLLENBQUVGLFdBQVVDLFVBQVNFLEdBQUlWLEtBQ3pDLEtBR0pGLEVBQUlhLGNBQWNULEdBQ2xCLE1BQU1VLEVBQWdCQyxNQUFPQyxJQUMzQixJQUNFLEdBQXdCLE9BQXBCQSxRQUFnRCxJQUFwQkEsT0FBNkIsRUFBU0EsRUFBZ0JOLFFBQVMsQ0FDN0YsTUFBTU8sRUFBU0QsRUFBZ0JOLFFBQVFRLEdBQ3pCLE1BQVZELFNBQ0lBLENBRVYsQ0FJRixDQUZBLE1BQU9FLEdBQ0xDLFFBQVFDLE1BQU1GLEVBQ2hCLEdBRUlELEVBQWtCLEtBQ3RCLEdBQUlmLEVBQVNtQixPQUFTLEVBQUcsQ0FDdkIsSUFBSUMsRUFBa0IsQ0FDcEJkLFNBQVVlLE9BQU9DLGlCQUNqQmYsUUFBUyxLQUFlLEVBQ3hCRSxJQUFLLEdBRVBULEVBQVN1QixTQUFTaEIsSUFDWkEsRUFBUUQsVUFBWWMsRUFBZ0JkLFdBQ3RDYyxFQUFrQmIsRUFDcEIsSUFFRlQsR0FBTyxFQUNQRSxFQUFXQSxFQUFTd0IsUUFBUWpCLEdBQVlBLEVBQVFFLEtBQU9XLEVBQWdCWCxLQUN2RUUsRUFBY1MsR0FBaUJLLE1BQUssSUFBTzNCLEdBQU8sR0FDcEQsR0FFRmlCLEdBQWlCLEdBQ2pCLEVBRUVXLEVBQStCLElBQy9CQyxFQUE0QixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmluby1tZC8uL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9jb21wb25lbnRzL2hhcmR3YXJlLWJhY2stYnV0dG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG4vKipcbiAqIFdoZW4gaGFyZHdhcmVCYWNrQnV0dG9uOiBmYWxzZSBpbiBjb25maWcsXG4gKiB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSB3ZSBhbHNvIGJsb2NrIHRoZSBkZWZhdWx0XG4gKiB3ZWJ2aWV3IGJlaGF2aW9yLiBJZiB3ZSBkb24ndCB0aGVuIGl0IHdpbGwgYmVcbiAqIHBvc3NpYmxlIGZvciB1c2VycyB0byBuYXZpZ2F0ZSBiYWNrd2FyZCB3aGlsZVxuICogYW4gb3ZlcmxheSBpcyBzdGlsbCBvcGVuLiBBZGRpdGlvbmFsbHksIGl0IHdpbGxcbiAqIGdpdmUgdGhlIGFwcGVhcmFuY2UgdGhhdCB0aGUgaGFyZHdhcmVCYWNrQnV0dG9uXG4gKiBjb25maWcgaXMgbm90IHdvcmtpbmcgYXMgdGhlIHBhZ2UgdHJhbnNpdGlvblxuICogd2lsbCBzdGlsbCBoYXBwZW4uXG4gKi9cbmNvbnN0IGJsb2NrSGFyZHdhcmVCYWNrQnV0dG9uID0gKCkgPT4ge1xuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdiYWNrYnV0dG9uJywgKCkgPT4geyB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxufTtcbmNvbnN0IHN0YXJ0SGFyZHdhcmVCYWNrQnV0dG9uID0gKCkgPT4ge1xuICBjb25zdCBkb2MgPSBkb2N1bWVudDtcbiAgbGV0IGJ1c3kgPSBmYWxzZTtcbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ2JhY2tidXR0b24nLCAoKSA9PiB7XG4gICAgaWYgKGJ1c3kpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBsZXQgaGFuZGxlcnMgPSBbXTtcbiAgICBjb25zdCBldiA9IG5ldyBDdXN0b21FdmVudCgnaW9uQmFja0J1dHRvbicsIHtcbiAgICAgIGJ1YmJsZXM6IGZhbHNlLFxuICAgICAgZGV0YWlsOiB7XG4gICAgICAgIHJlZ2lzdGVyKHByaW9yaXR5LCBoYW5kbGVyKSB7XG4gICAgICAgICAgaGFuZGxlcnMucHVzaCh7IHByaW9yaXR5LCBoYW5kbGVyLCBpZDogaW5kZXgrKyB9KTtcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgZG9jLmRpc3BhdGNoRXZlbnQoZXYpO1xuICAgIGNvbnN0IGV4ZWN1dGVBY3Rpb24gPSBhc3luYyAoaGFuZGxlclJlZ2lzdGVyKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlclJlZ2lzdGVyID09PSBudWxsIHx8IGhhbmRsZXJSZWdpc3RlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogaGFuZGxlclJlZ2lzdGVyLmhhbmRsZXIpIHtcbiAgICAgICAgICBjb25zdCByZXN1bHQgPSBoYW5kbGVyUmVnaXN0ZXIuaGFuZGxlcihwcm9jZXNzSGFuZGxlcnMpO1xuICAgICAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xuICAgICAgICAgICAgYXdhaXQgcmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHByb2Nlc3NIYW5kbGVycyA9ICgpID0+IHtcbiAgICAgIGlmIChoYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxldCBzZWxlY3RlZEhhbmRsZXIgPSB7XG4gICAgICAgICAgcHJpb3JpdHk6IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSLFxuICAgICAgICAgIGhhbmRsZXI6ICgpID0+IHVuZGVmaW5lZCxcbiAgICAgICAgICBpZDogLTEsXG4gICAgICAgIH07XG4gICAgICAgIGhhbmRsZXJzLmZvckVhY2goKGhhbmRsZXIpID0+IHtcbiAgICAgICAgICBpZiAoaGFuZGxlci5wcmlvcml0eSA+PSBzZWxlY3RlZEhhbmRsZXIucHJpb3JpdHkpIHtcbiAgICAgICAgICAgIHNlbGVjdGVkSGFuZGxlciA9IGhhbmRsZXI7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgYnVzeSA9IHRydWU7XG4gICAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKChoYW5kbGVyKSA9PiBoYW5kbGVyLmlkICE9PSBzZWxlY3RlZEhhbmRsZXIuaWQpO1xuICAgICAgICBleGVjdXRlQWN0aW9uKHNlbGVjdGVkSGFuZGxlcikudGhlbigoKSA9PiAoYnVzeSA9IGZhbHNlKSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBwcm9jZXNzSGFuZGxlcnMoKTtcbiAgfSk7XG59O1xuY29uc3QgT1ZFUkxBWV9CQUNLX0JVVFRPTl9QUklPUklUWSA9IDEwMDtcbmNvbnN0IE1FTlVfQkFDS19CVVRUT05fUFJJT1JJVFkgPSA5OTsgLy8gMSBsZXNzIHRoYW4gb3ZlcmxheSBwcmlvcml0eSBzaW5jZSBtZW51IGlzIGRpc3BsYXllZCBiZWhpbmQgb3ZlcmxheXNcblxuZXhwb3J0IHsgTUVOVV9CQUNLX0JVVFRPTl9QUklPUklUWSwgT1ZFUkxBWV9CQUNLX0JVVFRPTl9QUklPUklUWSwgYmxvY2tIYXJkd2FyZUJhY2tCdXR0b24sIHN0YXJ0SGFyZHdhcmVCYWNrQnV0dG9uIH07XG4iXSwibmFtZXMiOlsiYmxvY2tIYXJkd2FyZUJhY2tCdXR0b24iLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdGFydEhhcmR3YXJlQmFja0J1dHRvbiIsImRvYyIsImJ1c3kiLCJpbmRleCIsImhhbmRsZXJzIiwiZXYiLCJDdXN0b21FdmVudCIsImJ1YmJsZXMiLCJkZXRhaWwiLCJyZWdpc3RlciIsInByaW9yaXR5IiwiaGFuZGxlciIsInB1c2giLCJpZCIsImRpc3BhdGNoRXZlbnQiLCJleGVjdXRlQWN0aW9uIiwiYXN5bmMiLCJoYW5kbGVyUmVnaXN0ZXIiLCJyZXN1bHQiLCJwcm9jZXNzSGFuZGxlcnMiLCJlIiwiY29uc29sZSIsImVycm9yIiwibGVuZ3RoIiwic2VsZWN0ZWRIYW5kbGVyIiwiTnVtYmVyIiwiTUlOX1NBRkVfSU5URUdFUiIsImZvckVhY2giLCJmaWx0ZXIiLCJ0aGVuIiwiT1ZFUkxBWV9CQUNLX0JVVFRPTl9QUklPUklUWSIsIk1FTlVfQkFDS19CVVRUT05fUFJJT1JJVFkiXSwic291cmNlUm9vdCI6IiJ9